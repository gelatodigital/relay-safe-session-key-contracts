{
  "address": "0xEBF7dc15b153601DdA7594DC7bC42105c1E06844",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trustedForwarder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "sessionKey",
          "type": "bytes32"
        }
      ],
      "name": "SetSession",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_sessionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tmpPublicKey",
          "type": "address"
        }
      ],
      "name": "createSession",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_safe",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bool",
              "name": "hasValue",
              "type": "bool"
            },
            {
              "internalType": "enum ISafe.Operation",
              "name": "operation",
              "type": "uint8"
            }
          ],
          "internalType": "struct GelatoSafeModule.TxSpec[]",
          "name": "_txSpecs",
          "type": "tuple[]"
        }
      ],
      "name": "encodeTx",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_sessionId",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "enum ISafe.Operation",
              "name": "operation",
              "type": "uint8"
            }
          ],
          "internalType": "struct GelatoSafeModule.Tx[]",
          "name": "_txs",
          "type": "tuple[]"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "enum ISafe.Operation",
              "name": "operation",
              "type": "uint8"
            }
          ],
          "internalType": "struct GelatoSafeModule.Tx[]",
          "name": "_txs",
          "type": "tuple[]"
        }
      ],
      "name": "getExecTx",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "enum ISafe.Operation",
              "name": "operation",
              "type": "uint8"
            }
          ],
          "internalType": "struct GelatoSafeModule.Tx",
          "name": "execTx",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_safe",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bool",
              "name": "hasValue",
              "type": "bool"
            },
            {
              "internalType": "enum ISafe.Operation",
              "name": "operation",
              "type": "uint8"
            }
          ],
          "internalType": "struct GelatoSafeModule.TxSpec[]",
          "name": "_txSpecs",
          "type": "tuple[]"
        }
      ],
      "name": "isWhitelistedTransaction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bool",
              "name": "hasValue",
              "type": "bool"
            },
            {
              "internalType": "enum ISafe.Operation",
              "name": "operation",
              "type": "uint8"
            }
          ],
          "internalType": "struct GelatoSafeModule.TxSpec[]",
          "name": "_txs",
          "type": "tuple[]"
        }
      ],
      "name": "removeTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "sessions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tempPublicKey",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bool",
              "name": "hasValue",
              "type": "bool"
            },
            {
              "internalType": "enum ISafe.Operation",
              "name": "operation",
              "type": "uint8"
            }
          ],
          "internalType": "struct GelatoSafeModule.TxSpec[]",
          "name": "_txs",
          "type": "tuple[]"
        }
      ],
      "name": "whitelistTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6e88bcfd864ab74320a2b7ddc8f28373b150a9b8b2955bdfe5fe4815dc1442be",
  "receipt": {
    "to": null,
    "from": "0x32116f40a3ba854FFCaA578E2a4CE879a07EB33b",
    "contractAddress": "0xEBF7dc15b153601DdA7594DC7bC42105c1E06844",
    "transactionIndex": 5,
    "gasUsed": "2416742",
    "logsBloom": "0x
    "blockHash": "0xf8c9337745da7c24c14627c69e73d34bb8e699ebee4f2f10788c0db3383387e1",
    "transactionHash": "0x6e88bcfd864ab74320a2b7ddc8f28373b150a9b8b2955bdfe5fe4815dc1442be",
    "logs": [],
    "blockNumber": 9515463,
    "cumulativeGasUsed": "4297834",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd8253782c45a12053594b9deB72d8e8aB2Fca54c"
  ],
  "numDeployments": 2,
  "solcInputHash": "7ebb2be0665d1f177280e5b283f9c0d8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sessionKey\",\"type\":\"bytes32\"}],\"name\":\"SetSession\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_sessionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tmpPublicKey\",\"type\":\"address\"}],\"name\":\"createSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_safe\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"hasValue\",\"type\":\"bool\"},{\"internalType\":\"enum ISafe.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"internalType\":\"struct GelatoSafeModule.TxSpec[]\",\"name\":\"_txSpecs\",\"type\":\"tuple[]\"}],\"name\":\"encodeTx\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_sessionId\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"enum ISafe.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"internalType\":\"struct GelatoSafeModule.Tx[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"enum ISafe.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"internalType\":\"struct GelatoSafeModule.Tx[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"}],\"name\":\"getExecTx\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"enum ISafe.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"internalType\":\"struct GelatoSafeModule.Tx\",\"name\":\"execTx\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_safe\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"hasValue\",\"type\":\"bool\"},{\"internalType\":\"enum ISafe.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"internalType\":\"struct GelatoSafeModule.TxSpec[]\",\"name\":\"_txSpecs\",\"type\":\"tuple[]\"}],\"name\":\"isWhitelistedTransaction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"hasValue\",\"type\":\"bool\"},{\"internalType\":\"enum ISafe.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"internalType\":\"struct GelatoSafeModule.TxSpec[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"}],\"name\":\"removeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"sessions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tempPublicKey\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"hasValue\",\"type\":\"bool\"},{\"internalType\":\"enum ISafe.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"internalType\":\"struct GelatoSafeModule.TxSpec[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"}],\"name\":\"whitelistTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GelatoSafeModule.sol\":\"GelatoSafeModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@gelatonetwork/relay-context/contracts/vendor/ERC2771Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (metatx/ERC2771Context.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Context variant with ERC2771 support.\\n */\\n// based on https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/metatx/ERC2771Context.sol\\nabstract contract ERC2771Context {\\n    address private immutable _trustedForwarder;\\n\\n    constructor(address trustedForwarder) {\\n        _trustedForwarder = trustedForwarder;\\n    }\\n\\n    function isTrustedForwarder(address forwarder)\\n        public\\n        view\\n        virtual\\n        returns (bool)\\n    {\\n        return forwarder == _trustedForwarder;\\n    }\\n\\n    function _msgSender() internal view virtual returns (address sender) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            // The assembly code is more direct than the Solidity version using `abi.decode`.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                sender := shr(96, calldataload(sub(calldatasize(), 20)))\\n            }\\n        } else {\\n            return msg.sender;\\n        }\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        if (isTrustedForwarder(msg.sender)) {\\n            return msg.data[:msg.data.length - 20];\\n        } else {\\n            return msg.data;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x20c5b8992a629d2ed20d3929e0c2af18a91a88a6576ad71cc64495ba69c371cf\",\"license\":\"MIT\"},\"contracts/GelatoSafeModule.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.12;\\n\\nimport \\\"./vendor/gelato/GelatoBytes.sol\\\";\\nimport {IAutomate} from \\\"./interfaces/IAutomate.sol\\\";\\nimport {IOpsProxyFactory} from \\\"./interfaces/IOpsProxyFactory.sol\\\";\\nimport {ISafe} from \\\"./interfaces/ISafe.sol\\\";\\nimport {IMultiSend} from \\\"./interfaces/IMultiSend.sol\\\";\\nimport {\\n    ERC2771Context\\n} from \\\"@gelatonetwork/relay-context/contracts/vendor/ERC2771Context.sol\\\";\\n\\ncontract GelatoSafeModule is ERC2771Context {\\n    using GelatoBytes for bytes;\\n\\n    struct TxSpec {\\n        address to;\\n        bytes4 selector;\\n        bool hasValue;\\n        ISafe.Operation operation;\\n    }\\n\\n    struct Tx {\\n        address to;\\n        bytes data;\\n        uint256 value;\\n        ISafe.Operation operation;\\n    }\\n\\n    struct SessionGate {\\n        uint256 end;\\n        address user;\\n        address tempPublicKey;\\n    }\\n\\n    address private constant AUTOMATE_PROXY_FACTORY =\\n        0xC815dB16D4be6ddf2685C201937905aBf338F5D7;\\n\\n    address private constant MULTISEND =\\n        0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761;\\n\\n    mapping(bytes32 => address) whitelistedTransactions;\\n\\n    mapping(bytes32 => SessionGate) public sessions;\\n\\n    event SetSession(bytes32 sessionKey);\\n\\n    constructor(address _trustedForwarder) ERC2771Context(_trustedForwarder) {}\\n\\n    function createSession(\\n        string memory _sessionId,\\n        uint256 _duration,\\n        address _tmpPublicKey\\n    ) external {\\n\\n        bytes32 sessionId = keccak256(abi.encodePacked(_sessionId));\\n\\n        sessions[sessionId] = SessionGate(\\n            block.timestamp + _duration,\\n            _msgSender(),\\n            _tmpPublicKey\\n        );\\n\\n        emit SetSession(sessionId);\\n    }\\n\\n    function whitelistTransaction(TxSpec[] calldata _txs) external {\\n        bytes32 txHash = encodeTx(msg.sender, _txs);\\n        require(\\n            whitelistedTransactions[txHash] == address(0),\\n            \\\"GelatoSafeModule: Transaction already whitelisted\\\"\\n        );\\n\\n        whitelistedTransactions[txHash] = msg.sender;\\n    }\\n\\n    function removeTransaction(TxSpec[] calldata _txs) external {\\n        bytes32 txHash = encodeTx(msg.sender, _txs);\\n        require(\\n            whitelistedTransactions[txHash] == msg.sender,\\n            \\\"GelatoSafeModule: Transaction not whitelisted\\\"\\n        );\\n\\n        delete whitelistedTransactions[txHash];\\n    }\\n\\n    // Execute Transaction via dedicated Gelato msg.sender\\n    function execute(string memory _sessionId, Tx[] calldata _txs) external {\\n        bytes32 sessionId = keccak256(abi.encodePacked(_sessionId));\\n        SessionGate memory _sessionGate = sessions[sessionId ];\\n\\n        require(isTrustedForwarder(msg.sender),\\\"onlyGelatoRelayERC2771\\\");\\n        require(_sessionGate.user != address(0), 'sessionNotInit');\\n        require(_sessionGate.tempPublicKey == _msgSender(), 'tempKeyNotAllowed');\\n        require(_sessionGate.end >= block.timestamp, 'tempKeyExpired');\\n\\n\\n       \\n        _onlyWhitelistedTransactions(_sessionGate.user, _convertTxToTxSpec(_txs));\\n\\n        Tx memory execTx = getExecTx(_txs);\\n\\n        (bool success, bytes memory returnData) = ISafe(_sessionGate.user)\\n            .execTransactionFromModuleReturnData(\\n                execTx.to,\\n                execTx.value,\\n                execTx.data,\\n                execTx.operation\\n            );\\n\\n        if (!success)\\n            returnData.revertWithError(\\n                \\\"GelatoSafeModule: module exec reverted: \\\"\\n            );\\n    }\\n\\n    function getExecTx(\\n        Tx[] calldata _txs\\n    ) public pure returns (Tx memory execTx) {\\n        if (_txs.length > 1) {\\n            bytes memory multiSendData;\\n\\n            for (uint256 i; i < _txs.length; i++) {\\n                // Multisends get encoded as follows: \\\"uint8\\\", \\\"address\\\", \\\"uint256\\\", \\\"uint256\\\", \\\"bytes\\\"],\\n                Tx memory memTx = _txs[i];\\n                multiSendData = abi.encodePacked(\\n                    multiSendData,\\n                    uint8(memTx.operation),\\n                    memTx.to,\\n                    memTx.value,\\n                    memTx.data.length,\\n                    memTx.data\\n                );\\n            }\\n            execTx = Tx({\\n                to: MULTISEND,\\n                value: 0, // we are doing a delegatecall, so no need to send value\\n                data: abi.encodeWithSelector(\\n                    IMultiSend.multiSend.selector,\\n                    multiSendData\\n                ),\\n                operation: ISafe.Operation.DelegateCall\\n            });\\n        } else {\\n            execTx = Tx({\\n                to: _txs[0].to,\\n                value: _txs[0].value,\\n                data: _txs[0].data,\\n                operation: _txs[0].operation\\n            });\\n        }\\n    }\\n\\n    function _convertTxToTxSpec(\\n        Tx[] calldata _txs\\n    ) private pure returns (TxSpec[] memory) {\\n        TxSpec[] memory txSpecs = new TxSpec[](_txs.length);\\n        for (uint256 i; i < _txs.length; i++) {\\n            TxSpec memory txSpec = TxSpec(\\n                _txs[i].to,\\n                _txs[i].data.memorySliceSelector(),\\n                _txs[i].value > 0,\\n                _txs[i].operation\\n            );\\n            txSpecs[i] = txSpec;\\n        }\\n        return txSpecs;\\n    }\\n\\n    function _onlyWhitelistedTransactions(\\n        address _safe,\\n        TxSpec[] memory _txSpecs\\n    ) private view {\\n        require(\\n            isWhitelistedTransaction(_safe, _txSpecs),\\n            \\\"GelatoSafeModule: TxSpec not whitelisted\\\"\\n        );\\n    }\\n\\n    function isWhitelistedTransaction(\\n        address _safe,\\n        TxSpec[] memory _txSpecs\\n    ) public view returns (bool) {\\n        bytes32 txHash = encodeTx(_safe, _txSpecs);\\n        return whitelistedTransactions[txHash] == _safe;\\n    }\\n\\n    function encodeTx(\\n        address _safe,\\n        TxSpec[] memory _txSpecs\\n    ) public pure returns (bytes32) {\\n        return keccak256(abi.encode(_safe, _txSpecs));\\n    }\\n}\\n\",\"keccak256\":\"0xdc8fa5d5c86b0adcd76899079160cf3341fe46ceb201fa610317c1879c351238\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IAutomate.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.12;\\n\\ninterface IAutomate {\\n    enum Module {\\n        RESOLVER,\\n        TIME,\\n        PROXY,\\n        SINGLE_EXEC\\n    }\\n\\n    struct ModuleData {\\n        Module[] modules;\\n        bytes[] args;\\n    }\\n\\n    event TaskCreated(\\n        address indexed taskCreator,\\n        address indexed execAddress,\\n        bytes execDataOrSelector,\\n        ModuleData moduleData,\\n        address feeToken,\\n        bytes32 indexed taskId\\n    );\\n\\n    event TaskCancelled(bytes32 taskId, address taskCreator);\\n\\n    event ExecSuccess(\\n        uint256 indexed txFee,\\n        address indexed feeToken,\\n        address indexed execAddress,\\n        bytes execData,\\n        bytes32 taskId,\\n        bool callSuccess\\n    );\\n\\n    function createTask(\\n        address execAddress,\\n        bytes calldata execDataOrSelector,\\n        ModuleData calldata moduleData,\\n        address feeToken\\n    ) external returns (bytes32 taskId);\\n\\n    function cancelTask(bytes32 taskId) external;\\n\\n    function getFeeDetails() external view returns (uint256, address);\\n\\n    function gelato() external view returns (address payable);\\n\\n    function taskTreasury() external view returns (address);\\n\\n    function getTaskIdsByUser(address _taskCreator) external view returns (bytes32[] memory);\\n\\n    /**\\n     * @notice Execution API called by Gelato.\\n     *\\n     * @param taskCreator The address which created the task.\\n     * @param execAddress Address of contract that should be called by Gelato.\\n     * @param execData Execution data to be called with / function selector if execution data is yet to be determined.\\n     * @param moduleData Conditional modules that will be used. {See LibDataTypes-ModuleData}\\n     * @param txFee Fee paid to Gelato for execution, deducted on the TaskTreasury or transfered to Gelato.\\n     * @param feeToken Token used to pay for the execution. ETH = 0xeeeeee...\\n     * @param useTaskTreasuryFunds If taskCreator's balance on TaskTreasury should pay for the tx.\\n     * @param revertOnFailure To revert or not if call to execAddress fails. (Used for off-chain simulations)\\n     */\\n    function exec(\\n        address taskCreator,\\n        address execAddress,\\n        bytes memory execData,\\n        ModuleData calldata moduleData,\\n        uint256 txFee,\\n        address feeToken,\\n        bool useTaskTreasuryFunds,\\n        bool revertOnFailure\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6297ad16c5a54c6522e6a13678ff2abd449de8e09e349139d59c9f2e77cb0564\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IMultiSend.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.12;\\n\\ninterface IMultiSend {\\n    function multiSend(bytes memory transactions) external payable;\\n}\\n\",\"keccak256\":\"0xb799a4a581091ab1b1e0cc1c5362611cdff221c831cafcaf0c3e641ace285542\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IOpsProxyFactory.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.12;\\n\\ninterface IOpsProxyFactory {\\n    function getProxyOf(address account) external view returns (address, bool);\\n}\\n\",\"keccak256\":\"0x7b6565e1bdf017a76bc8aee91cfa089cceddbf289b2ff6922b7d9cbd4acf412f\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/ISafe.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.12;\\n\\ninterface ISafe {\\n    enum Operation {\\n        Call,\\n        DelegateCall\\n    }\\n\\n    /// @dev Allows a Module to execute a Safe transaction without any further confirmations.\\n    /// @param to Destination address of module transaction.\\n    /// @param value Ether value of module transaction.\\n    /// @param data Data payload of module transaction.\\n    /// @param operation Operation type of module transaction.\\n    function execTransactionFromModule(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        Operation operation\\n    ) external returns (bool success);\\n\\n    /// @dev Allows a Module to execute a Safe transaction without any further confirmations and return data\\n    /// @param to Destination address of module transaction.\\n    /// @param value Ether value of module transaction.\\n    /// @param data Data payload of module transaction.\\n    /// @param operation Operation type of module transaction.\\n    function execTransactionFromModuleReturnData(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        Operation operation\\n    ) external returns (bool success, bytes memory returnData);\\n\\n    /// @dev Allows to execute a Safe transaction confirmed by required number of owners and then pays the account that submitted the transaction.\\n    ///      Note: The fees are always transferred, even if the user transaction fails.\\n    /// @param to Destination address of Safe transaction.\\n    /// @param value Ether value of Safe transaction.\\n    /// @param data Data payload of Safe transaction.\\n    /// @param operation Operation type of Safe transaction.\\n    /// @param safeTxGas Gas that should be used for the Safe transaction.\\n    /// @param baseGas Gas costs that are independent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)\\n    /// @param gasPrice Gas price that should be used for the payment calculation.\\n    /// @param gasToken Token address (or 0 if ETH) that is used for the payment.\\n    /// @param refundReceiver Address of receiver of gas payment (or 0 if tx.origin).\\n    /// @param signatures Packed signature data ({bytes32 r}{bytes32 s}{uint8 v})\\n    function execTransaction(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        Operation operation,\\n        uint256 safeTxGas,\\n        uint256 baseGas,\\n        uint256 gasPrice,\\n        address gasToken,\\n        address payable refundReceiver,\\n        bytes memory signatures\\n    ) external payable returns (bool success);\\n\\n    function enableModule(address module) external;\\n\\n    function isModuleEnabled(address module) external view returns (bool);\\n\\n    function approveHash(bytes32 hashToApprove) external;\\n}\\n\",\"keccak256\":\"0xba5370cf20355363606fc47ff2cd5b76478617144dbcb8fa113c8400eea3b65d\",\"license\":\"UNLICENSED\"},\"contracts/vendor/gelato/GelatoBytes.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.12;\\n\\nlibrary GelatoBytes {\\n    function calldataSliceSelector(bytes calldata _bytes)\\n        internal\\n        pure\\n        returns (bytes4 selector)\\n    {\\n        selector =\\n            _bytes[0] |\\n            (bytes4(_bytes[1]) >> 8) |\\n            (bytes4(_bytes[2]) >> 16) |\\n            (bytes4(_bytes[3]) >> 24);\\n    }\\n\\n    function memorySliceSelector(bytes memory _bytes)\\n        internal\\n        pure\\n        returns (bytes4 selector)\\n    {\\n        selector =\\n            _bytes[0] |\\n            (bytes4(_bytes[1]) >> 8) |\\n            (bytes4(_bytes[2]) >> 16) |\\n            (bytes4(_bytes[3]) >> 24);\\n    }\\n\\n    function revertWithError(bytes memory _bytes, string memory _tracingInfo)\\n        internal\\n        pure\\n    {\\n        // 68: 32-location, 32-length, 4-ErrorSelector, UTF-8 err\\n        if (_bytes.length % 32 == 4) {\\n            bytes4 selector;\\n            assembly {\\n                selector := mload(add(0x20, _bytes))\\n            }\\n            if (selector == 0x08c379a0) {\\n                // Function selector for Error(string)\\n                assembly {\\n                    _bytes := add(_bytes, 68)\\n                }\\n                revert(string(abi.encodePacked(_tracingInfo, string(_bytes))));\\n            } else {\\n                revert(\\n                    string(abi.encodePacked(_tracingInfo, \\\"NoErrorSelector\\\"))\\n                );\\n            }\\n        } else {\\n            revert(\\n                string(abi.encodePacked(_tracingInfo, \\\"UnexpectedReturndata\\\"))\\n            );\\n        }\\n    }\\n\\n    function returnError(bytes memory _bytes, string memory _tracingInfo)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        // 68: 32-location, 32-length, 4-ErrorSelector, UTF-8 err\\n        if (_bytes.length % 32 == 4) {\\n            bytes4 selector;\\n            assembly {\\n                selector := mload(add(0x20, _bytes))\\n            }\\n            if (selector == 0x08c379a0) {\\n                // Function selector for Error(string)\\n                assembly {\\n                    _bytes := add(_bytes, 68)\\n                }\\n                return string(abi.encodePacked(_tracingInfo, string(_bytes)));\\n            } else {\\n                return\\n                    string(abi.encodePacked(_tracingInfo, \\\"NoErrorSelector\\\"));\\n            }\\n        } else {\\n            return\\n                string(abi.encodePacked(_tracingInfo, \\\"UnexpectedReturndata\\\"));\\n        }\\n    }\\n}\",\"keccak256\":\"0xdfac3fb229013ccb2340c673f2cadb2701fd2446b6419e858225fdd4973a2e2d\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162002bf938038062002bf98339818101604052810190620000379190620000de565b808073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505062000110565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000a68262000079565b9050919050565b620000b88162000099565b8114620000c457600080fd5b50565b600081519050620000d881620000ad565b92915050565b600060208284031215620000f757620000f662000074565b5b60006200010784828501620000c7565b91505092915050565b608051612acd6200012c60003960006102310152612acd6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806392e016df1161006657806392e016df146101465780639694a33714610162578063a91883191461017e578063ae0450ff146101ae578063bb364cb4146101de57610093565b8063405d4d2014610098578063572b6c05146100c85780637b311f66146100f85780637dbd283214610114575b600080fd5b6100b260048036038101906100ad9190611730565b6101fa565b6040516100bf91906117a5565b60405180910390f35b6100e260048036038101906100dd91906117c0565b61022d565b6040516100ef91906117fc565b60405180910390f35b610112600480360381019061010d9190611872565b610285565b005b61012e600480360381019061012991906118eb565b6103c3565b60405161013d93929190611940565b60405180910390f35b610160600480360381019061015b9190611a58565b61042d565b005b61017c60048036038101906101779190611872565b61059c565b005b61019860048036038101906101939190611730565b6106f7565b6040516101a591906117fc565b60405180910390f35b6101c860048036038101906101c39190611b1d565b610770565b6040516101d59190611ce1565b60405180910390f35b6101f860048036038101906101f39190611d03565b610a69565b005b6000828260405160200161020f929190611ea1565b60405160208183030381529060405280519060200120905092915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006102e7338484808060200260200160405190810160405280939291908181526020016000905b828210156102dd578484839050608002018036038101906102ce9190611ed1565b815260200190600101906102ad565b50505050506101fa565b90503373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610389576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038090611f81565b60405180910390fd5b60008082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b6000836040516020016104409190611fe8565b6040516020818303038152906040528051906020012090506040518060600160405280844261046f919061202e565b815260200161047c610de9565b73ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250600160008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507fd7a664a405eb64bdf6a057784c4082ee88bc25bead56ac540c58c1a95550a0cb8160405161058e91906117a5565b60405180910390a150505050565b60006105fe338484808060200260200160405190810160405280939291908181526020016000905b828210156105f4578484839050608002018036038101906105e59190611ed1565b815260200190600101906105c4565b50505050506101fa565b9050600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610698906120d4565b60405180910390fd5b3360008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60008061070484846101fa565b90508373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161491505092915050565b61077861136d565b600183839050111561090957606060005b8484905081101561082d5760008585838181106107a9576107a86120f4565b5b90506020028101906107bb9190612132565b6107c49061228f565b905082816060015160018111156107de576107dd611c07565b5b8260000151836040015184602001515185602001516040516020016108089695949392919061238a565b6040516020818303038152906040529250508080610825906123f2565b915050610789565b50604051806080016040528073a238cbeb142c10ef7ad8442c6d1f9e89e07e776173ffffffffffffffffffffffffffffffffffffffff168152602001638d80ff0a60e01b836040516024016108829190612484565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050508152602001600081526020016001808111156108fe576108fd611c07565b5b815250915050610a63565b604051806080016040528084846000818110610928576109276120f4565b5b905060200281019061093a9190612132565b600001602081019061094c91906117c0565b73ffffffffffffffffffffffffffffffffffffffff1681526020018484600081811061097b5761097a6120f4565b5b905060200281019061098d9190612132565b806020019061099c91906124a6565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001848460008181106109f8576109f76120f4565b5b9050602002810190610a0a9190612132565b60400135815260200184846000818110610a2757610a266120f4565b5b9050602002810190610a399190612132565b6060016020810190610a4b9190612509565b6001811115610a5d57610a5c611c07565b5b81525090505b92915050565b600083604051602001610a7c9190611fe8565b604051602081830303815290604052805190602001209050600060016000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050610b753361022d565b610bb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bab90612582565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1603610c27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1e906125ee565b60405180910390fd5b610c2f610de9565b73ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1614610ca0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c979061265a565b60405180910390fd5b4281600001511015610ce7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cde906126c6565b60405180910390fd5b610cfe8160200151610cf98686610e14565b611040565b6000610d0a8585610770565b9050600080836020015173ffffffffffffffffffffffffffffffffffffffff16635229073f84600001518560400151866020015187606001516040518563ffffffff1660e01b8152600401610d6294939291906126f5565b6000604051808303816000875af1158015610d81573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610daa91906127c6565b9150915081610ddf57610dde604051806060016040528060288152602001612a70602891398261108d90919063ffffffff16565b5b5050505050505050565b6000610df43361022d565b15610e0857601436033560601c9050610e10565b339050610e11565b5b90565b606060008383905067ffffffffffffffff811115610e3557610e346114b6565b5b604051908082528060200260200182016040528015610e6e57816020015b610e5b6113bd565b815260200190600190039081610e535790505b50905060005b848490508110156110355760006040518060800160405280878785818110610e9f57610e9e6120f4565b5b9050602002810190610eb19190612132565b6000016020810190610ec391906117c0565b73ffffffffffffffffffffffffffffffffffffffff168152602001610f5d888886818110610ef457610ef36120f4565b5b9050602002810190610f069190612132565b8060200190610f1591906124a6565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506111f4565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016000888886818110610f9657610f956120f4565b5b9050602002810190610fa89190612132565b604001351115158152602001878785818110610fc757610fc66120f4565b5b9050602002810190610fd99190612132565b6060016020810190610feb9190612509565b6001811115610ffd57610ffc611c07565b5b815250905080838381518110611016576110156120f4565b5b602002602001018190525050808061102d906123f2565b915050610e74565b508091505092915050565b61104a82826106f7565b611089576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108090612894565b60405180910390fd5b5050565b60046020835161109d91906128e3565b03611198576000826020015190506308c379a060e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361113c5760448301925081836040516020016110f1929190612914565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111339190612971565b60405180910390fd5b8160405160200161114d91906129df565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118f9190612971565b60405180910390fd5b806040516020016111a99190612a4d565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111eb9190612971565b60405180910390fd5b600060188260038151811061120c5761120b6120f4565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c6010836002815181106112705761126f6120f4565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c6008846001815181106112d4576112d36120f4565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c84600081518110611336576113356120f4565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161717179050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600060018111156113b7576113b6611c07565b5b81525090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016000151581526020016000600181111561142857611427611c07565b5b81525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061146d82611442565b9050919050565b61147d81611462565b811461148857600080fd5b50565b60008135905061149a81611474565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114ee826114a5565b810181811067ffffffffffffffff8211171561150d5761150c6114b6565b5b80604052505050565b600061152061142e565b905061152c82826114e5565b919050565b600067ffffffffffffffff82111561154c5761154b6114b6565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6115a18161156c565b81146115ac57600080fd5b50565b6000813590506115be81611598565b92915050565b60008115159050919050565b6115d9816115c4565b81146115e457600080fd5b50565b6000813590506115f6816115d0565b92915050565b6002811061160957600080fd5b50565b60008135905061161b816115fc565b92915050565b60006080828403121561163757611636611562565b5b6116416080611516565b905060006116518482850161148b565b6000830152506020611665848285016115af565b6020830152506040611679848285016115e7565b604083015250606061168d8482850161160c565b60608301525092915050565b60006116ac6116a784611531565b611516565b905080838252602082019050608084028301858111156116cf576116ce61155d565b5b835b818110156116f857806116e48882611621565b8452602084019350506080810190506116d1565b5050509392505050565b600082601f830112611717576117166114a0565b5b8135611727848260208601611699565b91505092915050565b6000806040838503121561174757611746611438565b5b60006117558582860161148b565b925050602083013567ffffffffffffffff8111156117765761177561143d565b5b61178285828601611702565b9150509250929050565b6000819050919050565b61179f8161178c565b82525050565b60006020820190506117ba6000830184611796565b92915050565b6000602082840312156117d6576117d5611438565b5b60006117e48482850161148b565b91505092915050565b6117f6816115c4565b82525050565b600060208201905061181160008301846117ed565b92915050565b600080fd5b60008083601f840112611832576118316114a0565b5b8235905067ffffffffffffffff81111561184f5761184e611817565b5b60208301915083608082028301111561186b5761186a61155d565b5b9250929050565b6000806020838503121561188957611888611438565b5b600083013567ffffffffffffffff8111156118a7576118a661143d565b5b6118b38582860161181c565b92509250509250929050565b6118c88161178c565b81146118d357600080fd5b50565b6000813590506118e5816118bf565b92915050565b60006020828403121561190157611900611438565b5b600061190f848285016118d6565b91505092915050565b6000819050919050565b61192b81611918565b82525050565b61193a81611462565b82525050565b60006060820190506119556000830186611922565b6119626020830185611931565b61196f6040830184611931565b949350505050565b600080fd5b600067ffffffffffffffff821115611997576119966114b6565b5b6119a0826114a5565b9050602081019050919050565b82818337600083830152505050565b60006119cf6119ca8461197c565b611516565b9050828152602081018484840111156119eb576119ea611977565b5b6119f68482856119ad565b509392505050565b600082601f830112611a1357611a126114a0565b5b8135611a238482602086016119bc565b91505092915050565b611a3581611918565b8114611a4057600080fd5b50565b600081359050611a5281611a2c565b92915050565b600080600060608486031215611a7157611a70611438565b5b600084013567ffffffffffffffff811115611a8f57611a8e61143d565b5b611a9b868287016119fe565b9350506020611aac86828701611a43565b9250506040611abd8682870161148b565b9150509250925092565b60008083601f840112611add57611adc6114a0565b5b8235905067ffffffffffffffff811115611afa57611af9611817565b5b602083019150836020820283011115611b1657611b1561155d565b5b9250929050565b60008060208385031215611b3457611b33611438565b5b600083013567ffffffffffffffff811115611b5257611b5161143d565b5b611b5e85828601611ac7565b92509250509250929050565b611b7381611462565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611bb3578082015181840152602081019050611b98565b60008484015250505050565b6000611bca82611b79565b611bd48185611b84565b9350611be4818560208601611b95565b611bed816114a5565b840191505092915050565b611c0181611918565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611c4757611c46611c07565b5b50565b6000819050611c5882611c36565b919050565b6000611c6882611c4a565b9050919050565b611c7881611c5d565b82525050565b6000608083016000830151611c966000860182611b6a565b5060208301518482036020860152611cae8282611bbf565b9150506040830151611cc36040860182611bf8565b506060830151611cd66060860182611c6f565b508091505092915050565b60006020820190508181036000830152611cfb8184611c7e565b905092915050565b600080600060408486031215611d1c57611d1b611438565b5b600084013567ffffffffffffffff811115611d3a57611d3961143d565b5b611d46868287016119fe565b935050602084013567ffffffffffffffff811115611d6757611d6661143d565b5b611d7386828701611ac7565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611db48161156c565b82525050565b611dc3816115c4565b82525050565b608082016000820151611ddf6000850182611b6a565b506020820151611df26020850182611dab565b506040820151611e056040850182611dba565b506060820151611e186060850182611c6f565b50505050565b6000611e2a8383611dc9565b60808301905092915050565b6000602082019050919050565b6000611e4e82611d7f565b611e588185611d8a565b9350611e6383611d9b565b8060005b83811015611e94578151611e7b8882611e1e565b9750611e8683611e36565b925050600181019050611e67565b5085935050505092915050565b6000604082019050611eb66000830185611931565b8181036020830152611ec88184611e43565b90509392505050565b600060808284031215611ee757611ee6611438565b5b6000611ef584828501611621565b91505092915050565b600082825260208201905092915050565b7f47656c61746f536166654d6f64756c653a205472616e73616374696f6e206e6f60008201527f742077686974656c697374656400000000000000000000000000000000000000602082015250565b6000611f6b602d83611efe565b9150611f7682611f0f565b604082019050919050565b60006020820190508181036000830152611f9a81611f5e565b9050919050565b600081519050919050565b600081905092915050565b6000611fc282611fa1565b611fcc8185611fac565b9350611fdc818560208601611b95565b80840191505092915050565b6000611ff48284611fb7565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061203982611918565b915061204483611918565b925082820190508082111561205c5761205b611fff565b5b92915050565b7f47656c61746f536166654d6f64756c653a205472616e73616374696f6e20616c60008201527f72656164792077686974656c6973746564000000000000000000000000000000602082015250565b60006120be603183611efe565b91506120c982612062565b604082019050919050565b600060208201905081810360008301526120ed816120b1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008235600160800383360303811261214e5761214d612123565b5b80830191505092915050565b600067ffffffffffffffff821115612175576121746114b6565b5b61217e826114a5565b9050602081019050919050565b600061219e6121998461215a565b611516565b9050828152602081018484840111156121ba576121b9611977565b5b6121c58482856119ad565b509392505050565b600082601f8301126121e2576121e16114a0565b5b81356121f284826020860161218b565b91505092915050565b60006080828403121561221157612210611562565b5b61221b6080611516565b9050600061222b8482850161148b565b600083015250602082013567ffffffffffffffff81111561224f5761224e611567565b5b61225b848285016121cd565b602083015250604061226f84828501611a43565b60408301525060606122838482850161160c565b60608301525092915050565b600061229b36836121fb565b9050919050565b600081905092915050565b60006122b882611b79565b6122c281856122a2565b93506122d2818560208601611b95565b80840191505092915050565b600060ff82169050919050565b60008160f81b9050919050565b6000612303826122eb565b9050919050565b61231b612316826122de565b6122f8565b82525050565b60008160601b9050919050565b600061233982612321565b9050919050565b600061234b8261232e565b9050919050565b61236361235e82611462565b612340565b82525050565b6000819050919050565b61238461237f82611918565b612369565b82525050565b600061239682896122ad565b91506123a2828861230a565b6001820191506123b28287612352565b6014820191506123c28286612373565b6020820191506123d28285612373565b6020820191506123e282846122ad565b9150819050979650505050505050565b60006123fd82611918565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361242f5761242e611fff565b5b600182019050919050565b600082825260208201905092915050565b600061245682611b79565b612460818561243a565b9350612470818560208601611b95565b612479816114a5565b840191505092915050565b6000602082019050818103600083015261249e818461244b565b905092915050565b600080833560016020038436030381126124c3576124c2612123565b5b80840192508235915067ffffffffffffffff8211156124e5576124e4612128565b5b6020830192506001820236038313156125015761250061212d565b5b509250929050565b60006020828403121561251f5761251e611438565b5b600061252d8482850161160c565b91505092915050565b7f6f6e6c7947656c61746f52656c61794552433237373100000000000000000000600082015250565b600061256c601683611efe565b915061257782612536565b602082019050919050565b6000602082019050818103600083015261259b8161255f565b9050919050565b7f73657373696f6e4e6f74496e6974000000000000000000000000000000000000600082015250565b60006125d8600e83611efe565b91506125e3826125a2565b602082019050919050565b60006020820190508181036000830152612607816125cb565b9050919050565b7f74656d704b65794e6f74416c6c6f776564000000000000000000000000000000600082015250565b6000612644601183611efe565b915061264f8261260e565b602082019050919050565b6000602082019050818103600083015261267381612637565b9050919050565b7f74656d704b657945787069726564000000000000000000000000000000000000600082015250565b60006126b0600e83611efe565b91506126bb8261267a565b602082019050919050565b600060208201905081810360008301526126df816126a3565b9050919050565b6126ef81611c5d565b82525050565b600060808201905061270a6000830187611931565b6127176020830186611922565b8181036040830152612729818561244b565b905061273860608301846126e6565b95945050505050565b600081519050612750816115d0565b92915050565b60006127696127648461215a565b611516565b90508281526020810184848401111561278557612784611977565b5b612790848285611b95565b509392505050565b600082601f8301126127ad576127ac6114a0565b5b81516127bd848260208601612756565b91505092915050565b600080604083850312156127dd576127dc611438565b5b60006127eb85828601612741565b925050602083015167ffffffffffffffff81111561280c5761280b61143d565b5b61281885828601612798565b9150509250929050565b7f47656c61746f536166654d6f64756c653a20547853706563206e6f742077686960008201527f74656c6973746564000000000000000000000000000000000000000000000000602082015250565b600061287e602883611efe565b915061288982612822565b604082019050919050565b600060208201905081810360008301526128ad81612871565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006128ee82611918565b91506128f983611918565b925082612909576129086128b4565b5b828206905092915050565b60006129208285611fb7565b915061292c8284611fb7565b91508190509392505050565b600061294382611fa1565b61294d8185611efe565b935061295d818560208601611b95565b612966816114a5565b840191505092915050565b6000602082019050818103600083015261298b8184612938565b905092915050565b7f4e6f4572726f7253656c6563746f720000000000000000000000000000000000600082015250565b60006129c9600f83611fac565b91506129d482612993565b600f82019050919050565b60006129eb8284611fb7565b91506129f6826129bc565b915081905092915050565b7f556e657870656374656452657475726e64617461000000000000000000000000600082015250565b6000612a37601483611fac565b9150612a4282612a01565b601482019050919050565b6000612a598284611fb7565b9150612a6482612a2a565b91508190509291505056fe47656c61746f536166654d6f64756c653a206d6f64756c6520657865632072657665727465643a20a26469706673582212208978500da202e961ff1785fd6d6d34faed4262926915579d2cf3237277ee5c0464736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c806392e016df1161006657806392e016df146101465780639694a33714610162578063a91883191461017e578063ae0450ff146101ae578063bb364cb4146101de57610093565b8063405d4d2014610098578063572b6c05146100c85780637b311f66146100f85780637dbd283214610114575b600080fd5b6100b260048036038101906100ad9190611730565b6101fa565b6040516100bf91906117a5565b60405180910390f35b6100e260048036038101906100dd91906117c0565b61022d565b6040516100ef91906117fc565b60405180910390f35b610112600480360381019061010d9190611872565b610285565b005b61012e600480360381019061012991906118eb565b6103c3565b60405161013d93929190611940565b60405180910390f35b610160600480360381019061015b9190611a58565b61042d565b005b61017c60048036038101906101779190611872565b61059c565b005b61019860048036038101906101939190611730565b6106f7565b6040516101a591906117fc565b60405180910390f35b6101c860048036038101906101c39190611b1d565b610770565b6040516101d59190611ce1565b60405180910390f35b6101f860048036038101906101f39190611d03565b610a69565b005b6000828260405160200161020f929190611ea1565b60405160208183030381529060405280519060200120905092915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006102e7338484808060200260200160405190810160405280939291908181526020016000905b828210156102dd578484839050608002018036038101906102ce9190611ed1565b815260200190600101906102ad565b50505050506101fa565b90503373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610389576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038090611f81565b60405180910390fd5b60008082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b6000836040516020016104409190611fe8565b6040516020818303038152906040528051906020012090506040518060600160405280844261046f919061202e565b815260200161047c610de9565b73ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250600160008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507fd7a664a405eb64bdf6a057784c4082ee88bc25bead56ac540c58c1a95550a0cb8160405161058e91906117a5565b60405180910390a150505050565b60006105fe338484808060200260200160405190810160405280939291908181526020016000905b828210156105f4578484839050608002018036038101906105e59190611ed1565b815260200190600101906105c4565b50505050506101fa565b9050600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610698906120d4565b60405180910390fd5b3360008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60008061070484846101fa565b90508373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161491505092915050565b61077861136d565b600183839050111561090957606060005b8484905081101561082d5760008585838181106107a9576107a86120f4565b5b90506020028101906107bb9190612132565b6107c49061228f565b905082816060015160018111156107de576107dd611c07565b5b8260000151836040015184602001515185602001516040516020016108089695949392919061238a565b6040516020818303038152906040529250508080610825906123f2565b915050610789565b50604051806080016040528073a238cbeb142c10ef7ad8442c6d1f9e89e07e776173ffffffffffffffffffffffffffffffffffffffff168152602001638d80ff0a60e01b836040516024016108829190612484565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050508152602001600081526020016001808111156108fe576108fd611c07565b5b815250915050610a63565b604051806080016040528084846000818110610928576109276120f4565b5b905060200281019061093a9190612132565b600001602081019061094c91906117c0565b73ffffffffffffffffffffffffffffffffffffffff1681526020018484600081811061097b5761097a6120f4565b5b905060200281019061098d9190612132565b806020019061099c91906124a6565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001848460008181106109f8576109f76120f4565b5b9050602002810190610a0a9190612132565b60400135815260200184846000818110610a2757610a266120f4565b5b9050602002810190610a399190612132565b6060016020810190610a4b9190612509565b6001811115610a5d57610a5c611c07565b5b81525090505b92915050565b600083604051602001610a7c9190611fe8565b604051602081830303815290604052805190602001209050600060016000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050610b753361022d565b610bb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bab90612582565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1603610c27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1e906125ee565b60405180910390fd5b610c2f610de9565b73ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1614610ca0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c979061265a565b60405180910390fd5b4281600001511015610ce7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cde906126c6565b60405180910390fd5b610cfe8160200151610cf98686610e14565b611040565b6000610d0a8585610770565b9050600080836020015173ffffffffffffffffffffffffffffffffffffffff16635229073f84600001518560400151866020015187606001516040518563ffffffff1660e01b8152600401610d6294939291906126f5565b6000604051808303816000875af1158015610d81573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610daa91906127c6565b9150915081610ddf57610dde604051806060016040528060288152602001612a70602891398261108d90919063ffffffff16565b5b5050505050505050565b6000610df43361022d565b15610e0857601436033560601c9050610e10565b339050610e11565b5b90565b606060008383905067ffffffffffffffff811115610e3557610e346114b6565b5b604051908082528060200260200182016040528015610e6e57816020015b610e5b6113bd565b815260200190600190039081610e535790505b50905060005b848490508110156110355760006040518060800160405280878785818110610e9f57610e9e6120f4565b5b9050602002810190610eb19190612132565b6000016020810190610ec391906117c0565b73ffffffffffffffffffffffffffffffffffffffff168152602001610f5d888886818110610ef457610ef36120f4565b5b9050602002810190610f069190612132565b8060200190610f1591906124a6565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506111f4565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016000888886818110610f9657610f956120f4565b5b9050602002810190610fa89190612132565b604001351115158152602001878785818110610fc757610fc66120f4565b5b9050602002810190610fd99190612132565b6060016020810190610feb9190612509565b6001811115610ffd57610ffc611c07565b5b815250905080838381518110611016576110156120f4565b5b602002602001018190525050808061102d906123f2565b915050610e74565b508091505092915050565b61104a82826106f7565b611089576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108090612894565b60405180910390fd5b5050565b60046020835161109d91906128e3565b03611198576000826020015190506308c379a060e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361113c5760448301925081836040516020016110f1929190612914565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111339190612971565b60405180910390fd5b8160405160200161114d91906129df565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118f9190612971565b60405180910390fd5b806040516020016111a99190612a4d565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111eb9190612971565b60405180910390fd5b600060188260038151811061120c5761120b6120f4565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c6010836002815181106112705761126f6120f4565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c6008846001815181106112d4576112d36120f4565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c84600081518110611336576113356120f4565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161717179050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600060018111156113b7576113b6611c07565b5b81525090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016000151581526020016000600181111561142857611427611c07565b5b81525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061146d82611442565b9050919050565b61147d81611462565b811461148857600080fd5b50565b60008135905061149a81611474565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114ee826114a5565b810181811067ffffffffffffffff8211171561150d5761150c6114b6565b5b80604052505050565b600061152061142e565b905061152c82826114e5565b919050565b600067ffffffffffffffff82111561154c5761154b6114b6565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6115a18161156c565b81146115ac57600080fd5b50565b6000813590506115be81611598565b92915050565b60008115159050919050565b6115d9816115c4565b81146115e457600080fd5b50565b6000813590506115f6816115d0565b92915050565b6002811061160957600080fd5b50565b60008135905061161b816115fc565b92915050565b60006080828403121561163757611636611562565b5b6116416080611516565b905060006116518482850161148b565b6000830152506020611665848285016115af565b6020830152506040611679848285016115e7565b604083015250606061168d8482850161160c565b60608301525092915050565b60006116ac6116a784611531565b611516565b905080838252602082019050608084028301858111156116cf576116ce61155d565b5b835b818110156116f857806116e48882611621565b8452602084019350506080810190506116d1565b5050509392505050565b600082601f830112611717576117166114a0565b5b8135611727848260208601611699565b91505092915050565b6000806040838503121561174757611746611438565b5b60006117558582860161148b565b925050602083013567ffffffffffffffff8111156117765761177561143d565b5b61178285828601611702565b9150509250929050565b6000819050919050565b61179f8161178c565b82525050565b60006020820190506117ba6000830184611796565b92915050565b6000602082840312156117d6576117d5611438565b5b60006117e48482850161148b565b91505092915050565b6117f6816115c4565b82525050565b600060208201905061181160008301846117ed565b92915050565b600080fd5b60008083601f840112611832576118316114a0565b5b8235905067ffffffffffffffff81111561184f5761184e611817565b5b60208301915083608082028301111561186b5761186a61155d565b5b9250929050565b6000806020838503121561188957611888611438565b5b600083013567ffffffffffffffff8111156118a7576118a661143d565b5b6118b38582860161181c565b92509250509250929050565b6118c88161178c565b81146118d357600080fd5b50565b6000813590506118e5816118bf565b92915050565b60006020828403121561190157611900611438565b5b600061190f848285016118d6565b91505092915050565b6000819050919050565b61192b81611918565b82525050565b61193a81611462565b82525050565b60006060820190506119556000830186611922565b6119626020830185611931565b61196f6040830184611931565b949350505050565b600080fd5b600067ffffffffffffffff821115611997576119966114b6565b5b6119a0826114a5565b9050602081019050919050565b82818337600083830152505050565b60006119cf6119ca8461197c565b611516565b9050828152602081018484840111156119eb576119ea611977565b5b6119f68482856119ad565b509392505050565b600082601f830112611a1357611a126114a0565b5b8135611a238482602086016119bc565b91505092915050565b611a3581611918565b8114611a4057600080fd5b50565b600081359050611a5281611a2c565b92915050565b600080600060608486031215611a7157611a70611438565b5b600084013567ffffffffffffffff811115611a8f57611a8e61143d565b5b611a9b868287016119fe565b9350506020611aac86828701611a43565b9250506040611abd8682870161148b565b9150509250925092565b60008083601f840112611add57611adc6114a0565b5b8235905067ffffffffffffffff811115611afa57611af9611817565b5b602083019150836020820283011115611b1657611b1561155d565b5b9250929050565b60008060208385031215611b3457611b33611438565b5b600083013567ffffffffffffffff811115611b5257611b5161143d565b5b611b5e85828601611ac7565b92509250509250929050565b611b7381611462565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611bb3578082015181840152602081019050611b98565b60008484015250505050565b6000611bca82611b79565b611bd48185611b84565b9350611be4818560208601611b95565b611bed816114a5565b840191505092915050565b611c0181611918565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611c4757611c46611c07565b5b50565b6000819050611c5882611c36565b919050565b6000611c6882611c4a565b9050919050565b611c7881611c5d565b82525050565b6000608083016000830151611c966000860182611b6a565b5060208301518482036020860152611cae8282611bbf565b9150506040830151611cc36040860182611bf8565b506060830151611cd66060860182611c6f565b508091505092915050565b60006020820190508181036000830152611cfb8184611c7e565b905092915050565b600080600060408486031215611d1c57611d1b611438565b5b600084013567ffffffffffffffff811115611d3a57611d3961143d565b5b611d46868287016119fe565b935050602084013567ffffffffffffffff811115611d6757611d6661143d565b5b611d7386828701611ac7565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611db48161156c565b82525050565b611dc3816115c4565b82525050565b608082016000820151611ddf6000850182611b6a565b506020820151611df26020850182611dab565b506040820151611e056040850182611dba565b506060820151611e186060850182611c6f565b50505050565b6000611e2a8383611dc9565b60808301905092915050565b6000602082019050919050565b6000611e4e82611d7f565b611e588185611d8a565b9350611e6383611d9b565b8060005b83811015611e94578151611e7b8882611e1e565b9750611e8683611e36565b925050600181019050611e67565b5085935050505092915050565b6000604082019050611eb66000830185611931565b8181036020830152611ec88184611e43565b90509392505050565b600060808284031215611ee757611ee6611438565b5b6000611ef584828501611621565b91505092915050565b600082825260208201905092915050565b7f47656c61746f536166654d6f64756c653a205472616e73616374696f6e206e6f60008201527f742077686974656c697374656400000000000000000000000000000000000000602082015250565b6000611f6b602d83611efe565b9150611f7682611f0f565b604082019050919050565b60006020820190508181036000830152611f9a81611f5e565b9050919050565b600081519050919050565b600081905092915050565b6000611fc282611fa1565b611fcc8185611fac565b9350611fdc818560208601611b95565b80840191505092915050565b6000611ff48284611fb7565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061203982611918565b915061204483611918565b925082820190508082111561205c5761205b611fff565b5b92915050565b7f47656c61746f536166654d6f64756c653a205472616e73616374696f6e20616c60008201527f72656164792077686974656c6973746564000000000000000000000000000000602082015250565b60006120be603183611efe565b91506120c982612062565b604082019050919050565b600060208201905081810360008301526120ed816120b1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008235600160800383360303811261214e5761214d612123565b5b80830191505092915050565b600067ffffffffffffffff821115612175576121746114b6565b5b61217e826114a5565b9050602081019050919050565b600061219e6121998461215a565b611516565b9050828152602081018484840111156121ba576121b9611977565b5b6121c58482856119ad565b509392505050565b600082601f8301126121e2576121e16114a0565b5b81356121f284826020860161218b565b91505092915050565b60006080828403121561221157612210611562565b5b61221b6080611516565b9050600061222b8482850161148b565b600083015250602082013567ffffffffffffffff81111561224f5761224e611567565b5b61225b848285016121cd565b602083015250604061226f84828501611a43565b60408301525060606122838482850161160c565b60608301525092915050565b600061229b36836121fb565b9050919050565b600081905092915050565b60006122b882611b79565b6122c281856122a2565b93506122d2818560208601611b95565b80840191505092915050565b600060ff82169050919050565b60008160f81b9050919050565b6000612303826122eb565b9050919050565b61231b612316826122de565b6122f8565b82525050565b60008160601b9050919050565b600061233982612321565b9050919050565b600061234b8261232e565b9050919050565b61236361235e82611462565b612340565b82525050565b6000819050919050565b61238461237f82611918565b612369565b82525050565b600061239682896122ad565b91506123a2828861230a565b6001820191506123b28287612352565b6014820191506123c28286612373565b6020820191506123d28285612373565b6020820191506123e282846122ad565b9150819050979650505050505050565b60006123fd82611918565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361242f5761242e611fff565b5b600182019050919050565b600082825260208201905092915050565b600061245682611b79565b612460818561243a565b9350612470818560208601611b95565b612479816114a5565b840191505092915050565b6000602082019050818103600083015261249e818461244b565b905092915050565b600080833560016020038436030381126124c3576124c2612123565b5b80840192508235915067ffffffffffffffff8211156124e5576124e4612128565b5b6020830192506001820236038313156125015761250061212d565b5b509250929050565b60006020828403121561251f5761251e611438565b5b600061252d8482850161160c565b91505092915050565b7f6f6e6c7947656c61746f52656c61794552433237373100000000000000000000600082015250565b600061256c601683611efe565b915061257782612536565b602082019050919050565b6000602082019050818103600083015261259b8161255f565b9050919050565b7f73657373696f6e4e6f74496e6974000000000000000000000000000000000000600082015250565b60006125d8600e83611efe565b91506125e3826125a2565b602082019050919050565b60006020820190508181036000830152612607816125cb565b9050919050565b7f74656d704b65794e6f74416c6c6f776564000000000000000000000000000000600082015250565b6000612644601183611efe565b915061264f8261260e565b602082019050919050565b6000602082019050818103600083015261267381612637565b9050919050565b7f74656d704b657945787069726564000000000000000000000000000000000000600082015250565b60006126b0600e83611efe565b91506126bb8261267a565b602082019050919050565b600060208201905081810360008301526126df816126a3565b9050919050565b6126ef81611c5d565b82525050565b600060808201905061270a6000830187611931565b6127176020830186611922565b8181036040830152612729818561244b565b905061273860608301846126e6565b95945050505050565b600081519050612750816115d0565b92915050565b60006127696127648461215a565b611516565b90508281526020810184848401111561278557612784611977565b5b612790848285611b95565b509392505050565b600082601f8301126127ad576127ac6114a0565b5b81516127bd848260208601612756565b91505092915050565b600080604083850312156127dd576127dc611438565b5b60006127eb85828601612741565b925050602083015167ffffffffffffffff81111561280c5761280b61143d565b5b61281885828601612798565b9150509250929050565b7f47656c61746f536166654d6f64756c653a20547853706563206e6f742077686960008201527f74656c6973746564000000000000000000000000000000000000000000000000602082015250565b600061287e602883611efe565b915061288982612822565b604082019050919050565b600060208201905081810360008301526128ad81612871565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006128ee82611918565b91506128f983611918565b925082612909576129086128b4565b5b828206905092915050565b60006129208285611fb7565b915061292c8284611fb7565b91508190509392505050565b600061294382611fa1565b61294d8185611efe565b935061295d818560208601611b95565b612966816114a5565b840191505092915050565b6000602082019050818103600083015261298b8184612938565b905092915050565b7f4e6f4572726f7253656c6563746f720000000000000000000000000000000000600082015250565b60006129c9600f83611fac565b91506129d482612993565b600f82019050919050565b60006129eb8284611fb7565b91506129f6826129bc565b915081905092915050565b7f556e657870656374656452657475726e64617461000000000000000000000000600082015250565b6000612a37601483611fac565b9150612a4282612a01565b601482019050919050565b6000612a598284611fb7565b9150612a6482612a2a565b91508190509291505056fe47656c61746f536166654d6f64756c653a206d6f64756c6520657865632072657665727465643a20a26469706673582212208978500da202e961ff1785fd6d6d34faed4262926915579d2cf3237277ee5c0464736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 158,
        "contract": "contracts/GelatoSafeModule.sol:GelatoSafeModule",
        "label": "whitelistedTransactions",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_address)"
      },
      {
        "astId": 163,
        "contract": "contracts/GelatoSafeModule.sol:GelatoSafeModule",
        "label": "sessions",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(SessionGate)148_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_bytes32,t_struct(SessionGate)148_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct GelatoSafeModule.SessionGate)",
        "numberOfBytes": "32",
        "value": "t_struct(SessionGate)148_storage"
      },
      "t_struct(SessionGate)148_storage": {
        "encoding": "inplace",
        "label": "struct GelatoSafeModule.SessionGate",
        "members": [
          {
            "astId": 143,
            "contract": "contracts/GelatoSafeModule.sol:GelatoSafeModule",
            "label": "end",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 145,
            "contract": "contracts/GelatoSafeModule.sol:GelatoSafeModule",
            "label": "user",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 147,
            "contract": "contracts/GelatoSafeModule.sol:GelatoSafeModule",
            "label": "tempPublicKey",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}